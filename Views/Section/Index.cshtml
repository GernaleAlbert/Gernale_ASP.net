@model IEnumerable<GERNALE_WEB_APP.Core.Model.Section>

@{
    ViewData["Title"] = "Sections";
}

<h1>Sections</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
@if (ViewData["error"] != null && Convert.ToBoolean(ViewData["error"]) == true)
{
    <div class="alert alert-danger" role="alert">
        @ViewData["message"]
    </div>
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                Total No. of Students
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @item.Students.Count
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
                @Html.ActionLink("Details", "Details", new { id=item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "delete-btn" })
            </td>
        </tr>
}
    </tbody>
</table>

<script>
    $(".delete-btn").on('click', function(event){
        event.preventDefault();
        if (confirm('Are you sure you want to delete this section?')) {
            $.ajax({
                type: "delete",
                url: $(this).attr('href'),
                success : function(response) {
                    alert(response);
                    location.reload();
                },
                error: function(error){
                    alert(error.responseText);
                }
            });
        }
    });
</script>